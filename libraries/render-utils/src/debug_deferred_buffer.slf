<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//
//  debug_deferred_buffer.frag
//  fragment shader
//
//  Created by Clement on 12/3
//  Copyright 2015 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include DeferredBufferRead.slh@>
<@include gpu/Color.slh@>
<$declareColorWheel()$>

layout(binding=RENDER_UTILS_DEBUG_TEXTURE0) uniform sampler2D debugTexture0;
layout(binding=RENDER_UTILS_TEXTURE_SHADOW) uniform sampler2DArrayShadow shadowMaps;

<@include ShadowCore.slh@>

<$declareDeferredCurvature()$>

<@include debug_deferred_buffer_shared.slh@>

layout(std140, binding=RENDER_UTILS_BUFFER_DEBUG_DEFERRED_PARAMS) uniform parametersBuffer {
    DebugParameters parameters;
};

float curvatureAO(float k) {
    return 1.0f - (0.0022f * k * k) + (0.0776f * k) + 0.7369f;
}

layout(location=0) in vec2 uv;
layout(location=0) out vec4 outFragColor;

//SOURCE_PLACEHOLDER

void main(void) {
    outFragColor = getFragmentColor();
}